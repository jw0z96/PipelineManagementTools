\relax 
\providecommand\hyper@newdestlabel[2]{}
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand\HyField@AuxAddToFields[1]{}
\providecommand\HyField@AuxAddToCoFields[2]{}
\@writefile{toc}{\contentsline {section}{\numberline {1}Introduction}{2}{section.1}}
\@writefile{toc}{\contentsline {section}{\numberline {2}Pipeline Management}{2}{section.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1}Requirements}{2}{subsection.2.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2}Limitations}{2}{subsection.2.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.3}Storage}{3}{subsection.2.3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.4}Asset Pipeline}{3}{subsection.2.4}}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces  A Flowchart describing the asset pipeline, colours indicating the responsibilities of each group member.\relax }}{4}{figure.caption.2}}
\providecommand*\caption@xref[2]{\@setref\relax\@undefined{#1}}
\newlabel{figure:pipelineFlow}{{1}{4}{A Flowchart describing the asset pipeline, colours indicating the responsibilities of each group member.\relax }{figure.caption.2}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.5}Asset Management}{4}{subsection.2.5}}
\newlabel{assman}{{2.5}{4}{Asset Management}{subsection.2.5}{}}
\citation{cpickle}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces  A Flowchart describing the data flow between pipeline steps for the 'charJames' asset. Note how the file versions for each pipeline step can be easily changed by re-targeting the symlink.\relax }}{5}{figure.caption.3}}
\newlabel{figure:assetPipeline}{{2}{5}{A Flowchart describing the data flow between pipeline steps for the 'charJames' asset. Note how the file versions for each pipeline step can be easily changed by re-targeting the symlink.\relax }{figure.caption.3}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces  An excerpt from the file \texttt  {charJames\_build.asset}, showing how the data is structured.\relax }}{6}{figure.caption.4}}
\newlabel{figure:exampleAsset}{{3}{6}{An excerpt from the file \texttt {charJames\_build.asset}, showing how the data is structured.\relax }{figure.caption.4}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces  Comparison between the standalone version of the asset manager (Top), and the version of the asset manager designed for use within Autodesk Maya (Bottom). Note that the Maya version provides functionality for opening or 'gathering' assets directly into the current Maya session.\relax }}{7}{figure.caption.5}}
\newlabel{figure:assetManagerGui}{{4}{7}{Comparison between the standalone version of the asset manager (Top), and the version of the asset manager designed for use within Autodesk Maya (Bottom). Note that the Maya version provides functionality for opening or 'gathering' assets directly into the current Maya session.\relax }{figure.caption.5}{}}
\citation{myGitHub}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.6}Miscellaneous Tools}{8}{subsection.2.6}}
\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces  The custom Maya shelf created to provide all team members with easy access to the production tools and scripts.\relax }}{9}{figure.caption.6}}
\newlabel{figure:shelf}{{5}{9}{The custom Maya shelf created to provide all team members with easy access to the production tools and scripts.\relax }{figure.caption.6}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {6}{\ignorespaces  The tool I developed automatically configure a shader, given a folder containing textures generated by Substance Painter or Substance Designer (Left), and the tool I developed to select facial and body controls for any character in the scene (Right).\relax }}{9}{figure.caption.7}}
\newlabel{figure:miscScripts}{{6}{9}{The tool I developed automatically configure a shader, given a folder containing textures generated by Substance Painter or Substance Designer (Left), and the tool I developed to select facial and body controls for any character in the scene (Right).\relax }{figure.caption.7}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.7}Production Management}{9}{subsection.2.7}}
\newlabel{productionManagement}{{2.7}{9}{Production Management}{subsection.2.7}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {7}{\ignorespaces  The production schedule created during the first term of the project, grouped by each team member.\relax }}{10}{figure.caption.8}}
\newlabel{figure:schedule}{{7}{10}{The production schedule created during the first term of the project, grouped by each team member.\relax }{figure.caption.8}{}}
\citation{kraken}
\citation{advancedSkeleton}
\@writefile{toc}{\contentsline {section}{\numberline {3}Character Rigging}{11}{section.3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1}Requirements}{11}{subsection.3.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2}Solution}{11}{subsection.3.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.3}Facial Rig}{12}{subsection.3.3}}
\@writefile{toc}{\contentsline {section}{\numberline {4}Rendering}{12}{section.4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.1}Optimisation}{12}{subsection.4.1}}
\newlabel{rlslgt}{{4.1}{12}{Optimisation}{subsection.4.1}{}}
\citation{stackoverflow}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.2}Render Farming}{13}{subsection.4.2}}
\@writefile{lof}{\contentsline {figure}{\numberline {8}{\ignorespaces  The dialog used to interface with the caching script. Note that the warning was necessary to ensure caches were sent to the right location.\relax }}{14}{figure.caption.9}}
\newlabel{figure:cache_tool}{{8}{14}{The dialog used to interface with the caching script. Note that the warning was necessary to ensure caches were sent to the right location.\relax }{figure.caption.9}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.3}Distributed Rendering Tools}{14}{subsection.4.3}}
\citation{pssh}
\citation{martin_2008}
\citation{cauchi_2017}
\citation{fernandez_2018}
\@writefile{toc}{\contentsline {section}{\numberline {5}Groom}{15}{section.5}}
\citation{muller_2015}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.1}Pipeline}{16}{subsection.5.1}}
\newlabel{threadsafe}{{5.1}{16}{Pipeline}{subsection.5.1}{}}
\@writefile{toc}{\contentsline {section}{\numberline {6}Compositing}{16}{section.6}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.1}Workflow}{17}{subsection.6.1}}
\@writefile{lof}{\contentsline {figure}{\numberline {9}{\ignorespaces  The template Nuke script which was used as the basis for all shots.\relax }}{17}{figure.caption.10}}
\newlabel{figure:compTemplate}{{9}{17}{The template Nuke script which was used as the basis for all shots.\relax }{figure.caption.10}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {10}{\ignorespaces  Comparison between sRGB viewing transform (Left) and Filmic 'Medium High Contrast' (Right). Note how skin highlights become over saturated in the sRGB viewing transform, giving a 'sunburned' look.\relax }}{18}{figure.caption.11}}
\newlabel{figure:filmic}{{10}{18}{Comparison between sRGB viewing transform (Left) and Filmic 'Medium High Contrast' (Right). Note how skin highlights become over saturated in the sRGB viewing transform, giving a 'sunburned' look.\relax }{figure.caption.11}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {11}{\ignorespaces  The Nuke script which was used for the opening shot. Similar Nuke scripts were used for shots 2, 3, and 4 to integrate the snowfall with a great degree of flexibility.\relax }}{19}{figure.caption.12}}
\newlabel{figure:shot010comp}{{11}{19}{The Nuke script which was used for the opening shot. Similar Nuke scripts were used for shots 2, 3, and 4 to integrate the snowfall with a great degree of flexibility.\relax }{figure.caption.12}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.2}Results}{19}{subsection.6.2}}
\@writefile{lof}{\contentsline {figure}{\numberline {12}{\ignorespaces  Comparison between the 'beauty' pass generated by RenderMan (Left), and the results of my compositing process (Right).\relax }}{20}{figure.caption.13}}
\newlabel{figure:compcomparison}{{12}{20}{Comparison between the 'beauty' pass generated by RenderMan (Left), and the results of my compositing process (Right).\relax }{figure.caption.13}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {13}{\ignorespaces  Composited frames from the opening shot.\relax }}{21}{figure.caption.14}}
\newlabel{figure:shot010only}{{13}{21}{Composited frames from the opening shot.\relax }{figure.caption.14}{}}
\@writefile{toc}{\contentsline {section}{\numberline {7}Critical Reflection}{22}{section.7}}
\bibstyle{plain}
\bibdata{references}
\bibcite{stackoverflow}{1}
\bibcite{cauchi_2017}{2}
\bibcite{fernandez_2018}{3}
\bibcite{cpickle}{4}
\bibcite{martin_2008}{5}
\bibcite{muller_2015}{6}
\bibcite{kraken}{7}
\bibcite{advancedSkeleton}{8}
\bibcite{myGitHub}{9}
\bibcite{pssh}{10}
\citation{stackoverflow}
\citation{stackoverflow}
\newlabel{lst:cpumem}{{1}{25}{Extract from the Python script used to determine which of the computers on the university network are suitable for rendering on. By capturing the output of the following commands I was able to get the current CPU and memory usage}{lstlisting.1}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {1}Extract from the Python script used to determine which of the computers on the university network are suitable for rendering on. By capturing the output of the following commands I was able to get the current CPU and memory usage.}{25}{lstlisting.1}}
\newlabel{lst:grep}{{2}{25}{The bash script used to replace any absolute paths in Maya scene files, and replace them with file paths suitable for use on the render farm. (Modified from this StackOverflow thread~\cite {stackoverflow})}{lstlisting.2}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {2}The bash script used to replace any absolute paths in Maya scene files, and replace them with file paths suitable for use on the render farm. (Modified from this StackOverflow thread\nobreakspace  {}\cite  {stackoverflow})}{25}{lstlisting.2}}
